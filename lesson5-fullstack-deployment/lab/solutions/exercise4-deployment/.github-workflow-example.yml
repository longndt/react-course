# GitHub Actions CI/CD Workflow for Vercel Deployment
#
# This is an EXAMPLE workflow that you can add to your repository
# to enable automated testing and deployment to Vercel.
#
# To use this:
# 1. Create .github/workflows/deploy.yml in your repository
# 2. Copy this content into that file
# 3. Add secrets to your GitHub repository:
#    - VERCEL_TOKEN (from vercel.com/account/tokens)
#    - VERCEL_ORG_ID (from .vercel/project.json after running 'vercel')
#    - VERCEL_PROJECT_ID (from .vercel/project.json)

name: Deploy to Vercel

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Type check
        run: npx tsc --noEmit

      - name: Build project
        run: npm run build
        env:
          VITE_API_URL: ${{ secrets.VITE_API_URL }}
          VITE_APP_NAME: ${{ secrets.VITE_APP_NAME }}
          VITE_ENABLE_ANALYTICS: ${{ secrets.VITE_ENABLE_ANALYTICS }}

  deploy-preview:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Preview to Vercel
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

  deploy-production:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Production to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

# Alternative: Netlify Deployment
#
# deploy-netlify:
#   runs-on: ubuntu-latest
#   needs: test
#   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
#
#   steps:
#     - name: Checkout code
#       uses: actions/checkout@v3
#
#     - name: Setup Node.js
#       uses: actions/setup-node@v3
#       with:
#         node-version: '18'
#
#     - name: Install dependencies
#       run: npm ci
#
#     - name: Build
#       run: npm run build
#       env:
#         VITE_API_URL: ${{ secrets.VITE_API_URL }}
#
#     - name: Deploy to Netlify
#       uses: netlify/actions/cli@master
#       env:
#         NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
#         NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
#       with:
#         args: deploy --prod --dir=dist
